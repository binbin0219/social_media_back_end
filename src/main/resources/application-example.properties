# Application name
spring.application.name=demo

# Spring Security default user credentials (for testing only)
spring.security.user.name=your_admin_username
spring.security.user.password=your_admin_password

# Allowed CORS origins (comma separated)
cors.allowed-origins=http://localhost:3000,http://192.168.100.10:3000,http://192.168.56.1:3000,https://your-production-frontend.com,https://your-staging-frontend.com

# PostgreSQL database connection (local)
spring.datasource.url=jdbc:postgresql://localhost:5433/your_database_name
spring.datasource.username=your_db_username
spring.datasource.password=your_db_password
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.default_schema=public
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# PostgreSQL database connection (production - uncomment to use)
# spring.datasource.url=jdbc:postgresql://your-production-db-host:5432/your_database_name
# spring.datasource.username=your_production_db_username
# spring.datasource.password=your_production_db_password
# spring.datasource.driver-class-name=org.postgresql.Driver
# spring.jpa.properties.hibernate.default_schema=public
# spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
# spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# JPA settings
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
# spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Cloudflare R2 credentials
cloudflare.r2.accessKey=your_r2_access_key
cloudflare.r2.secretKey=your_r2_secret_key
cloudflare.r2.endpoint=https://your-r2-endpoint
# Production bucket (uncomment to use)
# cloudflare.r2.bucketName=your_production_bucket
# cloudflare.r2.publicEndPoint=https://your-production-r2-public-url
# Local bucket
cloudflare.r2.bucketName=your_local_bucket
cloudflare.r2.publicEndPoint=https://your-local-r2-public-url

# Logging
logging.level.org.springframework.security=DEBUG

# Server port
server.port=${PORT:8080}

# File upload limits
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=50MB
